function thickData = prepareGCThickData(meridianSetName)
% Script to take the GC thickness profile generated by retinaTOMEAnalysis
% and turn it into a file suitable for analysis by this repo.

% Find and load the files we need
filepath = fileparts(mfilename('fullpath'));
filepath = strrep(filepath,'code','data');

% Set up an empty structure
thickData = struct('label',{},'angle',{},'supportDeg',{},'thickMM',{});

% Depending upon the setName, we may include vertical and / or horizontal
if ismember(meridianSetName,{'horiz','both'})
    
    % Load the data
    horizThicknessProfile = fullfile(filepath,'emmetropeThickProfile_horiz.mat');
    load(horizThicknessProfile,'thicknessMmHoriz','XPos_Degs');
    
    % Place into the structure
    thickData(end+1).label = 'temporal';
    thickData(end).angle = 180;
    thickData(end).supportDeg = abs(XPos_Degs(XPos_Degs<=0));
    thickData(end).thickMM = (thicknessMmHoriz(XPos_Degs<=0)')';
    
    thickData(end+1).label = 'nasal';
    thickData(end).angle = 0;
    thickData(end).supportDeg = abs(XPos_Degs(XPos_Degs>=0));
    thickData(end).thickMM = (thicknessMmHoriz(XPos_Degs>=0)')';
    
end

if ismember(meridianSetName,{'vert','both'})
    % Load the data
    horizThicknessProfile = fullfile(filepath,'emmetropeThickProfile_vert.mat');
    load(horizThicknessProfile,'thicknessMmVert','XPos_Degs');
    
    % Place into the structure
    thickData(end+1).label = 'inferior';
    thickData(end).angle = 270;
    thickData(end).supportDeg = abs(XPos_Degs(XPos_Degs<=0));
    thickData(end).thickMM = (thicknessMmVert(XPos_Degs<=0)')';
    
    thickData(end+1).label = 'superior';
    thickData(end).angle = 90;
    thickData(end).supportDeg = abs(XPos_Degs(XPos_Degs>=0));
    thickData(end).thickMM = (thicknessMmVert(XPos_Degs>=0)')';
end

end